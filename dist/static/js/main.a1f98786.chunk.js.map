{"version":3,"sources":["serviceWorker.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Boolean","window","location","hostname","match","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rrfConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","reduxFirestore","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1f98786.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a href=\"###\" onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react'\r\nimport {NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  \r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   \r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","  \r\nimport React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) =>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project =>{\r\n                return (\r\n                <Link to={'/project/'+project.id} key={project.id}>\r\n                    <ProjectSummary project={project} />\r\n                </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project,auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin' />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea  id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) =>{\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(CreateProject)\r\n","export const createProject = (project) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n\r\n        }).then(()=>{\r\n            dispatch({ type:'CREATE_PROJECT', project})\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state\r\n    case 'SIGNUP_SUCCESS':\r\n        console.log('signup success');\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n    case 'SIGNUP_ERROR':\r\n        console.log('signup error');\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","\r\nconst initState = {\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('project created!', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('project create error!', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }    \r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n// Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDoTVVbiBR7f1pO0DM8CVDMTo65hFRkrpM\",\r\n    authDomain: \"net-ninja-marioplan-2d552.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-2d552.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-2d552\",\r\n    storageBucket: \"net-ninja-marioplan-2d552.appspot.com\",\r\n    messagingSenderId: \"677088980962\",\r\n    appId: \"1:677088980962:web:1ec932c2a89fdb005813bb\",\r\n    measurementId: \"G-NMWRZXDHHL\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n\r\n  // Initialize firestore / so that the console doesn't complain about 'the update'\r\n  //firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { createFirestoreInstance,reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nimport firebase from 'firebase/app'\n\nconst initialState = {}\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true, \n  attachAuthIsReady: true};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, rrfConfig), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}